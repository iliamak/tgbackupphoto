import streamlit as st
from telethon import TelegramClient
from telethon.tl.types import InputMessagesFilterPhotos
import os
import asyncio
from contextlib import asynccontextmanager

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–ª–∏–µ–Ω—Ç–∞
@asynccontextmanager
async def create_client(api_id, api_hash):
    client = TelegramClient('anon', api_id, api_hash)
    try:
        await client.start()
        yield client
    finally:
        await client.disconnect()

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
async def download_photos(api_id, api_hash, chat_username):
    async with create_client(api_id, api_hash) as client:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat = await client.get_entity(chat_username)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
            messages = await client.get_messages(
                chat,
                filter=InputMessagesFilterPhotos,
                limit=None
            )
            
            if not messages:
                st.warning("–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
                return
            
            st.success(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(messages)}")
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            chat_name = chat.title if hasattr(chat, 'title') else chat.username
            os.makedirs(f'photos_from_{chat_name}', exist_ok=True)
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
            progress_bar = st.progress(0)
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            for i, message in enumerate(messages):
                try:
                    progress = (i + 1) / len(messages)
                    progress_bar.progress(progress)
                    
                    path = await message.download_media(f'./photos_from_{chat_name}/')
                    if path:
                        st.write(f"–°–∫–∞—á–∞–Ω–æ: {os.path.basename(path)}")
                except Exception as e:
                    st.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ {i+1}: {str(e)}")
                    continue
            
            st.success("–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {str(e)}")

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üì∏ Telegram Photos Downloader")
st.write("–°–∫–∞—á–∏–≤–∞–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ —á–∞—Ç–æ–≤ Telegram")

api_id = st.text_input("API ID", type="password")
api_hash = st.text_input("API Hash", type="password")
chat_username = st.text_input("Username —á–∞—Ç–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")

if st.button("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"):
    if not api_id or not api_hash or not chat_username:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
    else:
        try:
            st.info("–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
            asyncio.run(download_photos(api_id, api_hash, chat_username))
        except Exception as e:
            st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

st.markdown("---")
st.markdown(
    "<div style='text-align: center'>–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ Telegram</div>",
    unsafe_allow_html=True
)
