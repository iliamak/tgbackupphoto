import streamlit as st
from telethon import TelegramClient
from telethon.tl.types import InputMessagesFilterPhotos
import os
import asyncio
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def download_photos(api_id, api_hash, chat_username):
    logger.info(f"[{datetime.now()}] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    logger.info(f"[{datetime.now()}] –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Telegram")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramClient('anon', api_id, api_hash)
        logger.info(f"[{datetime.now()}] –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
        st.write("–°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç Telegram...")

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        await client.connect()
        logger.info(f"[{datetime.now()}] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not await client.is_user_authorized():
            logger.info(f"[{datetime.now()}] –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            st.warning("–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
            await client.start()
            
        logger.info(f"[{datetime.now()}] –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        st.write("–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")

        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            logger.info(f"[{datetime.now()}] –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ: {chat_username}")
            chat = await client.get_entity(chat_username)
            logger.info(f"[{datetime.now()}] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞")
            st.write("–ü–æ–ª—É—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            logger.info(f"[{datetime.now()}] –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
            messages = await client.get_messages(
                chat,
                filter=InputMessagesFilterPhotos,
                limit=None
            )
            
            if not messages:
                logger.warning(f"[{datetime.now()}] –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                st.warning("–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
                return
                
            logger.info(f"[{datetime.now()}] –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
            st.success(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(messages)}")
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            chat_name = chat.title if hasattr(chat, 'title') else chat.username
            os.makedirs(f'photos_from_{chat_name}', exist_ok=True)
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            progress_bar = st.progress(0)
            for i, message in enumerate(messages):
                logger.info(f"[{datetime.now()}] –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ {i+1}/{len(messages)}")
                progress = (i + 1) / len(messages)
                progress_bar.progress(progress)
                
                path = await message.download_media(f'./photos_from_{chat_name}/')
                if path:
                    logger.info(f"[{datetime.now()}] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {path}")
                    st.write(f"–°–∫–∞—á–∞–Ω–æ: {os.path.basename(path)}")
            
            logger.info(f"[{datetime.now()}] –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            st.success("–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–∫–∞—á–∞–Ω—ã!")
            
        except Exception as e:
            logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —á–∞—Ç–æ–º: {str(e)}")
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —á–∞—Ç–æ–º: {str(e)}")
            
    except Exception as e:
        logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {str(e)}")
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram: {str(e)}")
        
    finally:
        logger.info(f"[{datetime.now()}] –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        await client.disconnect()
        logger.info(f"[{datetime.now()}] –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üì∏ Telegram Photos Downloader")
st.write("–°–∫–∞—á–∏–≤–∞–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ —á–∞—Ç–æ–≤ Telegram")

api_id = st.text_input("API ID", type="password")
api_hash = st.text_input("API Hash", type="password")
chat_username = st.text_input("Username —á–∞—Ç–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")

if st.button("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"):
    logger.info(f"[{datetime.now()}] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    
    if not api_id or not api_hash or not chat_username:
        logger.warning(f"[{datetime.now()}] –ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
    else:
        logger.info(f"[{datetime.now()}] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
        st.info("–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
        try:
            asyncio.run(download_photos(api_id, api_hash, chat_username))
        except Exception as e:
            logger.error(f"[{datetime.now()}] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

st.markdown("---")
st.markdown(
    "<div style='text-align: center'>–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ Telegram</div>",
    unsafe_allow_html=True
)
