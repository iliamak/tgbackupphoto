import streamlit as st
from telethon import TelegramClient
from telethon.tl.types import InputMessagesFilterPhotos
import os
import asyncio
import logging
from datetime import datetime

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
if 'phone' not in st.session_state:
    st.session_state.phone = ''
if 'auth_step' not in st.session_state:
    st.session_state.auth_step = 'phone'
if 'client' not in st.session_state:
    st.session_state.client = None

async def send_code(api_id, api_hash, phone):
    """–û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞"""
    try:
        logger.info(f"[{datetime.now()}] –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞")
        client = TelegramClient('anon', api_id, api_hash)
        
        logger.info(f"[{datetime.now()}] –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram")
        await client.connect()
        
        logger.info(f"[{datetime.now()}] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–¥ –¥–ª—è –Ω–æ–º–µ—Ä–∞ {phone}")
        code_sent = await client.send_code_request(phone)
        
        logger.info(f"[{datetime.now()}] –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        st.session_state.client = client
        return True
        
    except Exception as e:
        logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {str(e)}")
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {str(e)}")
        return False

async def download_photos(api_id, api_hash, chat_username):
    try:
        if st.session_state.auth_step == 'phone':
            st.info("–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Telegram")
            phone = st.text_input(
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: +79123456789)",
                value=st.session_state.phone
            )
            
            if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥"):
                logger.info(f"[{datetime.now()}] –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞ –Ω–∞ –Ω–æ–º–µ—Ä {phone}")
                if await send_code(api_id, api_hash, phone):
                    st.session_state.phone = phone
                    st.session_state.auth_step = 'code'
                    st.rerun()
            return

        elif st.session_state.auth_step == 'code':
            st.info(f"–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –Ω–æ–º–µ—Ä {st.session_state.phone}")
            code = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram", key="code_input")
            
            if st.button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥"):
                try:
                    logger.info(f"[{datetime.now()}] –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –∫–æ–¥–æ–º")
                    await st.session_state.client.sign_in(st.session_state.phone, code)
                    logger.info(f"[{datetime.now()}] –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
                    st.session_state.auth_step = 'completed'
                    st.success("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                    st.rerun()
                except Exception as e:
                    logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–¥–∞: {str(e)}")
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–¥–∞: {str(e)}")
            return

        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...
        [–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π]

    except Exception as e:
        logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ: {str(e)}")
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üì∏ Telegram Photos Downloader")

# –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
st.sidebar.write("–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
st.sidebar.write(f"–¢–µ–∫—É—â–∏–π —à–∞–≥: {st.session_state.auth_step}")
st.sidebar.write(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: {st.session_state.phone}")

api_id = st.text_input("API ID", type="password")
api_hash = st.text_input("API Hash", type="password")
chat_username = st.text_input("Username —á–∞—Ç–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")

if st.button("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"):
    if not api_id or not api_hash or not chat_username:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
    else:
        asyncio.run(download_photos(api_id, api_hash, chat_username))
