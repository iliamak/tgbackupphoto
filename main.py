import streamlit as st
from telethon import TelegramClient
from telethon.tl.types import InputMessagesFilterPhotos
import os
import asyncio
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
   page_title="Telegram Photos Downloader",
   page_icon="üì∏",
   layout="wide"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
if 'phone' not in st.session_state:
   st.session_state.phone = ''
if 'auth_step' not in st.session_state:
   st.session_state.auth_step = 'phone'
if 'client' not in st.session_state:
   st.session_state.client = None
if 'phone_code_hash' not in st.session_state:
   st.session_state.phone_code_hash = None

async def send_code(api_id, api_hash, phone):
   """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
   try:
       # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
       logger.info(f"[{datetime.now()}] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞")
       st.write("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞...")

       # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
       client = TelegramClient('anon', api_id, api_hash)
       logger.info(f"[{datetime.now()}] –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
       st.write("–ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω...")

       # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
       logger.info(f"[{datetime.now()}] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
       await client.connect()
       st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ...")

       # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
       if not await client.is_user_authorized():
           logger.info(f"[{datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥")
           st.write("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–¥...")
           
           # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–¥
           sent = await client.send_code_request(phone=phone)
           
           if sent:
               logger.info(f"[{datetime.now()}] –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
               st.success("–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram.")
               st.session_state.client = client
               st.session_state.phone_code_hash = sent.phone_code_hash
               return True
           else:
               logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞")
               st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
               return False
               
   except Exception as e:
       logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞: {str(e)}")
       st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
       if "Too many requests" in str(e):
           st.warning("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
       return False

async def download_photos(api_id, api_hash, chat_username):
   """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
   try:
       # –ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
       if st.session_state.auth_step == 'phone':
           st.info("–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Telegram")
           
           # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
           with st.form(key='phone_form'):
               phone = st.text_input(
                   "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: +79123456789)",
                   value=st.session_state.phone
               )
               submit_button = st.form_submit_button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
               
               if submit_button:
                   logger.info(f"[{datetime.now()}] –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞ –Ω–∞ –Ω–æ–º–µ—Ä {phone}")
                   
                   # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞
                   if not phone.startswith('+'):
                       phone = '+' + phone
                   
                   phone = phone.replace(' ', '').replace('-', '')
                   logger.info(f"[{datetime.now()}] –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: {phone}")
                   
                   if await send_code(api_id, api_hash, phone):
                       st.session_state.phone = phone
                       st.session_state.auth_step = 'code'
                       st.rerun()
           return

       elif st.session_state.auth_step == 'code':
           st.info(f"–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –Ω–æ–º–µ—Ä {st.session_state.phone}")
           
           # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞
           with st.form(key='code_form'):
               code = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram", key="code_input")
               submit_code = st.form_submit_button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥")
               
               if submit_code:
                   try:
                       logger.info(f"[{datetime.now()}] –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –∫–æ–¥–æ–º")
                       await st.session_state.client.sign_in(
                           phone=st.session_state.phone,
                           code=code,
                           phone_code_hash=st.session_state.phone_code_hash
                       )
                       logger.info(f"[{datetime.now()}] –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
                       st.session_state.auth_step = 'completed'
                       st.success("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                       st.rerun()
                   except Exception as e:
                       logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–¥–∞: {str(e)}")
                       st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–¥–∞: {str(e)}")
           
           # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞
           if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ", key="resend_code_btn"):
               if await send_code(api_id, api_hash, st.session_state.phone):
                   st.success("–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ")
           return

       # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
       try:
           if not st.session_state.client:
               client = TelegramClient('anon', api_id, api_hash)
               await client.connect()
           else:
               client = st.session_state.client

           logger.info(f"[{datetime.now()}] –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ")
           chat = await client.get_entity(chat_username)
           
           logger.info(f"[{datetime.now()}] –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
           messages = await client.get_messages(
               chat,
               filter=InputMessagesFilterPhotos,
               limit=None
           )
           
           if not messages:
               st.warning("–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
               return
           
           st.success(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(messages)}")
           
           chat_name = chat.title if hasattr(chat, 'title') else chat.username
           download_dir = f'photos_from_{chat_name}'
           os.makedirs(download_dir, exist_ok=True)
           
           progress_bar = st.progress(0)
           status_text = st.empty()
           
           for i, message in enumerate(messages):
               progress = (i + 1) / len(messages)
               progress_bar.progress(progress)
               status_text.text(f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ {i+1} –∏–∑ {len(messages)}")
               
               path = await message.download_media(f'./{download_dir}/')
               if path:
                   logger.info(f"[{datetime.now()}] –°–∫–∞—á–∞–Ω —Ñ–∞–π–ª: {path}")

           st.success(f"–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω—ã –≤ –ø–∞–ø–∫—É {download_dir}!")
           
       except Exception as e:
           logger.error(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}")
           st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}")
           
   except Exception as e:
       logger.error(f"[{datetime.now()}] –û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
       st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
   
   finally:
       if st.session_state.client:
           await client.disconnect()

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üì∏ Telegram Photos Downloader")
st.write("–°–∫–∞—á–∏–≤–∞–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ —á–∞—Ç–æ–≤ Telegram")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞
with st.form(key='main_form'):
   api_id = st.text_input("API ID", type="password")
   api_hash = st.text_input("API Hash", type="password")
   chat_username = st.text_input(
       "Username —á–∞—Ç–∞ –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
       value="me" if st.session_state.auth_step != 'phone' else "",
       help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'me' –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
   )
   submit_main = st.form_submit_button("–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")

   if submit_main:
       if not api_id or not api_hash or not chat_username:
           st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
       else:
           asyncio.run(download_photos(api_id, api_hash, chat_username))

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∞–π–¥–±–∞—Ä–µ
with st.sidebar:
   st.write("–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
   st.write(f"–¢–µ–∫—É—â–∏–π —à–∞–≥: {st.session_state.auth_step}")
   st.write(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: {st.session_state.phone}")
   st.write(f"Phone code hash: {st.session_state.phone_code_hash}")
   if st.button("–°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ"):
       for key in st.session_state.keys():
           del st.session_state[key]
       st.rerun()

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
with st.expander("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"):
   st.write("""
   1. –ü–æ–ª—É—á–∏—Ç–µ API ID –∏ API Hash:
      - –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://my.telegram.org
      - –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å
      - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'API development tools'
      - –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      
   2. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º—É:
      - –í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ API ID –∏ API Hash
      - –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ 'me'
      
   3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏:
      - –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
      - –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥–µ—Ç –≤ Telegram
      
   4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
   """)

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown(
   "<div style='text-align: center'>–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ Telegram</div>",
   unsafe_allow_html=True
)
